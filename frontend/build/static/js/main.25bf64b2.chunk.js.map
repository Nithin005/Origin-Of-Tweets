{"version":3,"sources":["logo.svg","utils.js","config.js","new.js","user.js","search.js","NavBar.js","initial-elements.js","Graph.js","App.js","reportWebVitals.js","index.js"],"names":["toQueryString","params","URLSearchParams","toString","keywordToQueryString","keywords","result","key","split","length","config","updateConfig","force","engine","searxURL","Cookies","get","set","window","location","reload","console","log","Styles","styled","div","request","url","a","req_params","referrer","mode","method","fetch","res","json","getNewPosts","streamRoutine","results","entries","q","engines","getNewResults","stream","href","New","useState","setResults","raw_params","getParams","search","col","columns","React","useMemo","id","push","Header","accessor","replace","getMemoCompatibleHeader","data","useEffect","tableInstance","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","striped","bordered","hover","size","variant","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","fetchUserDataRoutine","User","setResult","src","pathname","Search","toFixed","useSortBy","getSortByToggleProps","isSorted","isSortedDesc","updateEngine","e","setEngine","target","text","handleSearch","query","origin","NavigationBar","setQuery","Navbar","bg","Container","Brand","Toggle","Collapse","Nav","className","Link","NavDropdown","title","Item","onClick","Divider","Form","onSubmit","preventDefault","FormControl","type","placeholder","onChange","value","submit","Button","position","x","y","edgeType","label","source","animated","dagreGraph","dagre","graphlib","Graph","setDefaultEdgeLabel","nodeWidth","convertResultsToGraph","_results","elements","el","link","getLayoutedElements","direction","isHorizontal","setGraph","rankdir","forEach","isNode","setNode","width","height","setEdge","layout","nodeWithPosition","node","targetPosition","sourcePosition","Math","random","nodeHeight","layoutedElements","initialElements","LayoutFlow","setElements","resultsDB","setResultsDB","currentResult","setCurrentResult","onLayout","useCallback","style","onConnect","els","addEdge","onElementsRemove","elementsToRemove","removeElements","connectionLineType","dataset","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.25bf64b2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function toQueryString(params){\r\n    return new URLSearchParams(params).toString();\r\n}\r\n\r\nfunction keywordToQueryString(keywords){\r\n    var result = ''\r\n    for(const key of keywords){\r\n        const subkey = key.toString().split(\" \");\r\n        if(subkey.length > 1){\r\n            result += `\"${key}\"`;  \r\n        }\r\n        else{\r\n            result += `${key}`\r\n        }\r\n        result += \" \";\r\n    }\r\n    return result;\r\n}\r\n\r\nexport {toQueryString, keywordToQueryString}","import Cookies from 'js-cookie'\r\n\r\nvar config = {};\r\n\r\nfunction updateConfig(force = false, engine = 'reddit', searxURL = 'http://127.0.0.1:5002/search'){\r\n    if(!Cookies.get('engine') || force){\r\n        Cookies.set('engine', engine);\r\n    }\r\n    Cookies.set('searxURL', searxURL);\r\n\r\n    config = {\r\n        \"engine\": Cookies.get('engine'),\r\n        \"searxURL\" : Cookies.get('searxURL'),\r\n    }\r\n    if(force){\r\n    window.location.reload()\r\n    }\r\n}\r\n\r\nupdateConfig();\r\n\r\nconsole.log(config)\r\n\r\nexport default config\r\nexport {updateConfig}","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {toQueryString, keywordToQueryString} from './utils'\r\nimport config from './config'\r\nimport { useTable } from 'react-table'\r\nimport React, {useEffect, useState} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport BTable from 'react-bootstrap/Table';\r\n\r\nconst searxURL = config.searxURL\r\n\r\nconst Styles = styled.div`\r\n\r\ntable {\r\n  border-spacing: 0;\r\n  border: 1px solid black;\r\n\r\n  tr {\r\n    :last-child {\r\n      td {\r\n        border-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  th,\r\n  td {\r\n    margin: 0;\r\n    padding: 0.5rem;\r\n    border-bottom: 1px solid black;\r\n    border-right: 1px solid black;\r\n\r\n    :last-child {\r\n      border-right: 0;\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nfunction getMemoCompatibleHeader(col){\r\n    const columns = [];\r\n    for(const id of col){\r\n        columns.push({\r\n            Header: id,\r\n            accessor: id.replace(' ', '')\r\n        })\r\n    }\r\n    return columns;\r\n}\r\n\r\nasync function request(url, req_params= {\r\n    referrer: '',\r\n    mode: 'cors',\r\n    method: 'GET'\r\n  }){\r\n    const res = await fetch(url, req_params);\r\n    return await res.json();\r\n}\r\n\r\nasync function getNewPosts(params){\r\n  const res = await request(searxURL + '?' + toQueryString(params), null);\r\n  return res;\r\n}\r\n\r\nfunction getParams(raw_params){\r\n    const params = {\r\n        engines: raw_params.get('engines') || config.engine,\r\n        stream: 1\r\n    }\r\n    return {...params, ...raw_params}\r\n}\r\n\r\nasync function streamRoutine(params){\r\n    const res = await getNewPosts(params);\r\n    const results = res['results']\r\n    console.log(results)\r\n\r\n    for (const [i, result] of results.entries()){\r\n        var url = '/search?' + toQueryString({\r\n            q: keywordToQueryString(result['keywords']),\r\n            engines: params['engines']\r\n        })\r\n        result['similar'] = url;\r\n\r\n        url =  '/user?' + toQueryString({\r\n            q: result['author'],\r\n            engines: result['engine']\r\n        })\r\n        result['user'] = url;\r\n    }\r\n    console.log(results)\r\n    return results;\r\n}\r\n\r\nasync function getNewResults(params){\r\n  const results = await streamRoutine({stream: 1, engines: config.engine, ...params});\r\n  for(const result of results){\r\n      result['user'] = <a href={result['user']}>user</a>\r\n      result['similar'] = <a href={result['similar']}>similar</a>\r\n  }\r\n  return results;\r\n}\r\n\r\nfunction New() {\r\n    const [results, setResults] = useState([]);\r\n    const raw_params = new URLSearchParams(window.location.search);\r\n    const params = getParams(raw_params);\r\n    const col = ['title', 'content', 'publishedDate', 'url', 'metric', 'veracity', 'similar', 'user']\r\n\r\n    const columns = React.useMemo(()=>getMemoCompatibleHeader(col), []);\r\n    const data = React.useMemo(()=>results, [results])\r\n\r\n    React.useEffect(async ()=>{\r\n            const results = await streamRoutine(params);\r\n            for(const result of results){\r\n                result['user'] = <a href={result['user']}>user</a>\r\n                result['similar'] = <a href={result['similar']}>similar</a>\r\n            }\r\n            setResults(results)\r\n    },[])\r\n    // streamRoutine(params)\r\n    // .then((res)=> setResults(res))\r\n    console.log(columns);\r\n    console.log(data);\r\n\r\n    const tableInstance = useTable({ columns, data })\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n      } = tableInstance\r\n      \r\n      return  (\r\n          <Styles>\r\n        <BTable striped bordered hover size=\"sm\"  variant=\"dark\" {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </BTable>\r\n        </Styles>\r\n      )\r\n}\r\n\r\n\r\nexport default New;\r\nexport {getNewResults}\r\n","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {toQueryString, keywordToQueryString} from './utils'\r\nimport config from './config'\r\nimport { useTable } from 'react-table'\r\nimport React, {useEffect, useState} from 'react'\r\nimport styled from 'styled-components'\r\nimport ReactJson from 'react-json-view'\r\n\r\nasync function request(url, req_params= {\r\n    referrer: '',\r\n    mode: 'cors',\r\n    method: 'GET'\r\n  }){\r\n    const res = await fetch(url, req_params);\r\n    return await res.json();\r\n}\r\n\r\nfunction getParams(raw_params){\r\n    const params = {\r\n        q: raw_params.get('q'),\r\n        engines: raw_params.get('engines') || config.engine\r\n    }\r\n    return {...params, ...raw_params}\r\n}\r\n\r\nasync function fetchUserDataRoutine(params){\r\n    const url = config.searxURL+ '/user'+ '?' + toQueryString(params)\r\n    console.log(url)\r\n    const res = await request(url);\r\n    return res;\r\n}\r\n\r\nfunction User(){\r\n    const raw_params = new URLSearchParams(window.location.search);\r\n    const params = getParams(raw_params);\r\n    const [result, setResult] = useState({});\r\n    useEffect(async()=>{\r\n        const result = await fetchUserDataRoutine(params)\r\n        setResult(result);\r\n    }, [])\r\n\r\n    return <ReactJson src={result} />;\r\n}\r\n\r\nexport default User","import logo from './logo.svg';\r\nimport './App.css';\r\nimport {toQueryString, keywordToQueryString} from './utils'\r\nimport config from './config'\r\nimport { useTable, useSortBy } from 'react-table'\r\nimport React, {useEffect, useState} from 'react'\r\nimport styled from 'styled-components'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport BTable from 'react-bootstrap/Table';\r\n\r\nconst searxURL = config.searxURL\r\n\r\nconst Styles = styled.div`\r\n\r\ntable {\r\n  border-spacing: 0;\r\n  border: 1px solid black;\r\n\r\n  tr {\r\n    :last-child {\r\n      td {\r\n        border-bottom: 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  th,\r\n  td {\r\n    margin: 0;\r\n    padding: 0.5rem;\r\n    border-bottom: 1px solid black;\r\n    border-right: 1px solid black;\r\n\r\n    :last-child {\r\n      border-right: 0;\r\n    }\r\n  }\r\n}\r\n`\r\n\r\nfunction getMemoCompatibleHeader(col){\r\n    const columns = [];\r\n    for(const id of col){\r\n      const res = {\r\n        Header: id,\r\n        accessor: id.replace(' ', '')\r\n    }\r\n        if(id == 'metric'){\r\n          res['sortType'] = 'basic';\r\n        }\r\n        columns.push(res)\r\n    }\r\n    return columns;\r\n}\r\n\r\nasync function request(url, req_params= {\r\n    referrer: '',\r\n    mode: 'cors',\r\n    method: 'GET'\r\n  }){\r\n    const res = await fetch(url, req_params);\r\n    return await res.json();\r\n}\r\n\r\nasync function getNewPosts(params){\r\n  const res = await request(searxURL + '?' + toQueryString(params), null);\r\n  return res;\r\n}\r\n\r\nfunction getParams(raw_params){\r\n    const params = {\r\n        q: raw_params.get('q'),\r\n        engines: config.engine\r\n    }\r\n    return {...params, ...raw_params}\r\n}\r\n\r\nasync function streamRoutine(params){\r\n    const res = await getNewPosts(params);\r\n    const results = res['results']\r\n    console.log(results)\r\n    for (const [i, result] of results.entries()){\r\n        var url = window.location.pathname + '?' + toQueryString({\r\n            q: keywordToQueryString(result['keywords']),\r\n            engines: params['engines']\r\n        })\r\n        result['similar'] = url;\r\n\r\n        url =  '/user?' + toQueryString({\r\n            q: result['author'],\r\n            engines: result['engine']\r\n        })\r\n        result['user'] = url;\r\n    }\r\n    console.log(results)\r\n    return results;\r\n}\r\n\r\n\r\n\r\nfunction Search() {\r\n    const [results, setResults] = useState([]);\r\n    const raw_params = new URLSearchParams(window.location.search);\r\n    const params = getParams(raw_params);\r\n    const col = ['title', 'content', 'publishedDate', 'url', 'metric', 'veracity', 'similar', 'user']\r\n\r\n    const columns = React.useMemo(()=>getMemoCompatibleHeader(col), []);\r\n    const data = React.useMemo(()=>results, [results])\r\n\r\n    React.useEffect(async ()=>{\r\n            const results = await streamRoutine(params);\r\n            for(const result of results){\r\n                result['user'] = <a href={result['user']}>user</a>\r\n                result['similar'] = <a href={result['similar']}>similar</a>\r\n                result['metric'] = (result['metric']/10**6).toFixed(2);\r\n            }\r\n            setResults(results)\r\n    },[])\r\n    // streamRoutine(params)\r\n    // .then((res)=> setResults(res))\r\n    console.log(columns);\r\n    console.log(data);\r\n\r\n    const tableInstance = useTable({ columns, data }, useSortBy)\r\n    const {\r\n        getTableProps,\r\n        getTableBodyProps,\r\n        headerGroups,\r\n        rows,\r\n        prepareRow,\r\n      } = tableInstance\r\n      \r\n      return  (\r\n          <Styles>\r\n        <BTable striped bordered hover size=\"sm\"  variant=\"dark\" {...getTableProps()}>\r\n          <thead>\r\n            {headerGroups.map(headerGroup => (\r\n              <tr {...headerGroup.getHeaderGroupProps()}>\r\n                {headerGroup.headers.map(column => (\r\n                  <th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n                    <span>{column.isSorted ? (column.isSortedDesc ? ' 🔽' : ' 🔼') : ''}</span>\r\n                    {column.render('Header')}</th>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </thead>\r\n          <tbody {...getTableBodyProps()}>\r\n            {rows.map((row, i) => {\r\n              prepareRow(row)\r\n              return (\r\n                <tr {...row.getRowProps()}>\r\n                  {row.cells.map(cell => {\r\n                    return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\r\n                  })}\r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </BTable>\r\n        </Styles>\r\n      )\r\n}\r\n\r\n\r\nexport default Search;\r\n","import Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport {Nav, NavDropdown, Form, FormControl, Button} from 'react-bootstrap'\r\nimport React, {useEffect, useState} from 'react'\r\nimport {toQueryString} from './utils'\r\nimport config, {updateConfig} from './config'\r\n\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction updateEngine(e, setEngine){\r\n    const engine = e.target.text\r\n    setEngine(engine);\r\n    updateConfig(true, engine);\r\n}\r\n\r\nfunction handleSearch(e, query){\r\n  console.log(e)\r\n  const url = window.location.origin + '/search?'+ toQueryString({q: query});\r\n  window.location.replace(url)\r\n}\r\n\r\nfunction NavigationBar(){\r\n    const [query, setQuery] = useState('');\r\n    const [engine, setEngine] = useState(config.engine)\r\n    return (<Navbar bg=\"dark\" variant=\"dark\">\r\n    <Container>\r\n      <Navbar.Brand href=\"/\">Origin Finder</Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"me-auto\">\r\n          <Nav.Link href=\"/\">Home</Nav.Link>\r\n          <Nav.Link href=\"graph\">Graph</Nav.Link>\r\n          <NavDropdown title={engine} id=\"basic-nav-dropdown\">\r\n            <NavDropdown.Item onClick={(e) => {updateEngine(e, setEngine)}}>reddit</NavDropdown.Item>\r\n            <NavDropdown.Item onClick={(e) => {updateEngine(e, setEngine)}}>twitter</NavDropdown.Item>\r\n            <NavDropdown.Divider />\r\n            <NavDropdown.Item >extra</NavDropdown.Item>\r\n          </NavDropdown>\r\n        </Nav>\r\n        <Form className=\"d-flex\" onSubmit={(e)=>{handleSearch(e, query);e.preventDefault();}}>\r\n        <FormControl\r\n          type=\"search\"\r\n          placeholder=\"Search\"\r\n          className=\"me-2\"\r\n          aria-label=\"Search\"\r\n          onChange={(e)=>{setQuery(e.target.value);console.log(e.target.value)}}\r\n          submit={(e)=>{handleSearch(e, query);e.preventDefault();}}\r\n        />\r\n        <Button id=\"navbar-submit\" variant=\"outline-success\" onClick={(e)=>{handleSearch(e, query)}}>Search</Button>\r\n      </Form >\r\n      </Navbar.Collapse>\r\n    </Container>\r\n  </Navbar>)\r\n}\r\n\r\nexport default NavigationBar;","const position = { x: 0, y: 0 };\r\nconst edgeType = 'smoothstep';\r\n\r\nexport default [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'input' },\r\n    position,\r\n  },\r\n  {\r\n    id: '2',\r\n    data: { label: 'node 2' },\r\n    position,\r\n  },\r\n  {\r\n    id: '2a',\r\n    data: { label: 'node 2a' },\r\n    position,\r\n  },\r\n  {\r\n    id: '2b',\r\n    data: { label: 'node 2b' },\r\n    position,\r\n  },\r\n  {\r\n    id: '2c',\r\n    data: { label: 'node 2c' },\r\n    position,\r\n  },\r\n  {\r\n    id: '2d',\r\n    data: { label: 'node 2d' },\r\n    position,\r\n  },\r\n  {\r\n    id: '3',\r\n    data: { label: 'node 3' },\r\n    position,\r\n  },\r\n  {\r\n    id: '4',\r\n    data: { label: 'node 4' },\r\n    position,\r\n  },\r\n  {\r\n    id: '5',\r\n    data: { label: 'node 5' },\r\n    position,\r\n  },\r\n  {\r\n    id: '6',\r\n    type: 'output',\r\n    data: { label: 'output' },\r\n    position,\r\n  },\r\n  { id: '7', type: 'output', data: { label: 'output' }, position },\r\n  { id: 'e12', source: '1', target: '2', type: edgeType, animated: true },\r\n  { id: 'e13', source: '1', target: '3', type: edgeType, animated: true },\r\n  { id: 'e22a', source: '2', target: '2a', type: edgeType, animated: true },\r\n  { id: 'e22b', source: '2', target: '2b', type: edgeType, animated: true },\r\n  { id: 'e22c', source: '2', target: '2c', type: edgeType, animated: true },\r\n  { id: 'e2c2d', source: '2c', target: '2d', type: edgeType, animated: true },\r\n  { id: 'e45', source: '4', target: '5', type: edgeType, animated: true },\r\n  { id: 'e56', source: '5', target: '6', type: edgeType, animated: true },\r\n  { id: 'e57', source: '5', target: '7', type: edgeType, animated: true },\r\n];","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useCallback, useEffect } from 'react';\r\nimport ReactFlow, {\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  removeElements,\r\n  isNode,\r\n} from 'react-flow-renderer';\r\nimport dagre from 'dagre';\r\n\r\nimport initialElements from './initial-elements';\r\n\r\nimport './layouting.css';\r\nimport { getNewResults } from './new';\r\n// import 'react-flow-renderer/dist/layouting.css';\r\nimport ReactJson from 'react-json-view'\r\nimport config from './config';\r\n\r\nconst dagreGraph = new dagre.graphlib.Graph();\r\ndagreGraph.setDefaultEdgeLabel(() => ({}));\r\n\r\n// In order to keep this example simple the node width and height are hardcoded.\r\n// In a real world app you would use the correct width and height values of\r\n// const nodes = useStoreState(state => state.nodes) and then node.__rf.width, node.__rf.height\r\n\r\nconst nodeWidth = 172;\r\nconst nodeHeight = 36;\r\n\r\nfunction convertResultsToGraph(results, engine){\r\n    const _results = {};\r\n    const position = { x: 0, y: 0 };\r\n    const elements = [];\r\n    elements.push({\r\n        id: engine,\r\n        data: {label: engine},\r\n        position\r\n    })\r\n    for(const result of results){\r\n        const id = result['timestamp']\r\n        const el = {\r\n            id: id,\r\n            data: {label: result['author']},\r\n            position,\r\n        }\r\n        elements.push(el);\r\n\r\n        const link = {\r\n            id: 'e'+id,\r\n            source: id,\r\n            target: engine,\r\n            type: \"edgeType\",\r\n            animated: true\r\n        }\r\n        elements.push(link)\r\n        _results[result['timestamp']] = result\r\n    }\r\n    console.log(elements)\r\n    return [elements, _results]\r\n}\r\n\r\nconst getLayoutedElements = (elements, direction = 'TB') => {\r\n  const isHorizontal = direction === 'LR';\r\n  dagreGraph.setGraph({ rankdir: direction });\r\n\r\n  elements.forEach((el) => {\r\n    if (isNode(el)) {\r\n      dagreGraph.setNode(el.id, { width: nodeWidth, height: nodeHeight });\r\n    } else {\r\n      dagreGraph.setEdge(el.source, el.target);\r\n    }\r\n  });\r\n\r\n  dagre.layout(dagreGraph);\r\n\r\n  return elements.map((el) => {\r\n    if (isNode(el)) {\r\n      const nodeWithPosition = dagreGraph.node(el.id);\r\n      el.targetPosition = isHorizontal ? 'left' : 'top';\r\n      el.sourcePosition = isHorizontal ? 'right' : 'bottom';\r\n      console.log(el)\r\n\r\n      // unfortunately we need this little hack to pass a slightly different position\r\n      // to notify react flow about the change. Moreover we are shifting the dagre node position\r\n      // (anchor=center center) to the top left so it matches the react flow node anchor point (top left).\r\n      el.position = {\r\n        x: nodeWithPosition.x - nodeWidth / 2 + Math.random() / 1000,\r\n        y: nodeWithPosition.y - nodeHeight / 2,\r\n      };\r\n    }\r\n\r\n    return el;\r\n  });\r\n};\r\n\r\nconst layoutedElements = getLayoutedElements(initialElements);\r\n\r\nconst LayoutFlow = () => {\r\n  const [elements, setElements] = useState(layoutedElements);\r\n  const [resultsDB, setResultsDB] = useState({});\r\n  const [currentResult, setCurrentResult] = useState({text: 'data will show here'});\r\n  const onConnect = (params) =>\r\n    setElements((els) =>\r\n      addEdge({ ...params, type: 'smoothstep', animated: true }, els)\r\n    );\r\n  const onElementsRemove = (elementsToRemove) =>\r\n    setElements((els) => removeElements(elementsToRemove, els));\r\n\r\n  const onLayout = useCallback(\r\n    (direction) => {\r\n      const layoutedElements = getLayoutedElements(elements, direction);\r\n      setElements(layoutedElements);\r\n    },\r\n    [elements]\r\n  );\r\n\r\n  useEffect(async() => {\r\n      const results = await getNewResults({stream: 1});\r\n      console.log(results);\r\n      const [elements, resultsDB] = convertResultsToGraph(results, config.engine);\r\n      const layoutedElements = getLayoutedElements(elements, 'TB');\r\n      setElements(layoutedElements);\r\n      setResultsDB(resultsDB);\r\n  }, []);\r\n\r\n  return (\r\n      <div className='graph-row'>\r\n    <div className=\"layoutflow graph-left\" style={{ height: '500'}}>\r\n      <ReactFlowProvider>\r\n        <ReactFlow\r\n          elements={elements}\r\n          onConnect={onConnect}\r\n          onElementsRemove={onElementsRemove}\r\n          connectionLineType=\"smoothstep\"\r\n          onClick={(e)=>{console.log(resultsDB[e.target.dataset['id']]); setCurrentResult(resultsDB[e.target.dataset['id']])}}\r\n        />\r\n        <div className=\"controls\">\r\n          <button onClick={() => onLayout('TB')}>vertical layout</button>\r\n          <button onClick={() => onLayout('LR')}>horizontal layout</button>\r\n          <button onClick={() => onLayout('LR')}>init Graph</button>\r\n        </div>\r\n      </ReactFlowProvider>\r\n    </div>\r\n    <div className=\"layout graph-right\" style={{ height: '100%'}}><ReactJson src={currentResult} /></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayoutFlow;","import logo from './logo.svg';\nimport './App.css';\nimport {toQueryString, keywordToQueryString} from './utils'\nimport New from './new.js'\nimport {\n  BrowserRouter,\n  Routes,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport User from './user';\nimport Search from './search';\nimport NavigationBar from './NavBar';\nimport Graph from './Graph'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nfunction App() {\n  return (\n    <div>\n    <NavigationBar />\n    <BrowserRouter>\n    <Routes>\n      <Route path=\"/\" element={<New />} />\n      <Route path=\"user\" element={<User />} />\n      <Route path=\"search\" element={<Search />} />\n      <Route path=\"graph\" element={<Graph />} />\n    </Routes>\n  </BrowserRouter>\n  </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}